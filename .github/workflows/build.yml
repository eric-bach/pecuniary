name: build

on: [pull_request]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}/client
    env:
      GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Use Node.js 14.x
        uses: actions/setup-node@v3
        with:
          node-version: 14.x

      - name: Install NPM Dependencies (Infra)
        run: npm ci
        working-directory: infra

      - name: Build Infra
        run: npm run build
        working-directory: infra

      - name: Install NPM Dependencies (Marketing)
        run: npm ci
        working-directory: frontend/marketing

      - name: Install NPM Dependencies (Auth)
        run: npm ci
        working-directory: frontend/auth

      - name: Install NPM Dependencies (Dashboard)
        run: npm ci
        working-directory: frontend/dashboard

      - name: Install NPM Dependencies (Container)
        run: npm ci
        working-directory: frontend/container

      # - name: Create client/.env file
      #   run: |
      #     touch .env
      #     echo REACT_APP_COGNITO_USERPOOL_ID=${{ secrets.REACT_APP_COGNITO_USERPOOL_ID }} >> .env
      #     echo REACT_APP_COGNITO_CLIENT_ID=${{ secrets.REACT_APP_COGNITO_CLIENT_ID }} >> .env
      #     cp .env .env.prod
      #     cat .env.prod
      #   working-directory: client

      # - name: Create client/src/aws-exports.js file
      #   run: |
      #     touch aws-exports.js
      #     echo const awsmobile = { aws_project_region: '${{ secrets.CDK_DEFAULT_REGION }}', aws_cognito_region: '${{ secrets.CDK_DEFAULT_REGION }}', aws_user_pools_id: '${{secrets.REACT_APP_COGNITO_USERPOOL_ID}}', aws_user_pools_web_client_id: '${{ secrets.REACT_APP_COGNITO_CLIENT_ID }}', aws_appsync_graphqlEndpoint: '${{ secrets.AWS_APPSYNC_GRAPHQL_ENDPOINT }}', aws_appsync_region: '${{ secrets.CDK_DEFAULT_REGION }}', aws_appsync_authenticationType: 'AMAZON_COGNITO_USER_POOLS', }; >> aws-exports.js
      #     echo export default awsmobile; >> aws-exports.js
      #     cat aws-exports.js
      #   working-directory: client/src

      - name: Build Frontend Marketing
        run: npm run build
        working-directory: frontend/marketing

      - name: Build Frontend Auth
        run: npm run build
        working-directory: frontend/auth

      - name: Build Frontend Dashboard
        run: npm run build
        working-directory: frontend/dashboard

      - name: Create frontend/container/.env file
        run: |
          touch .env
          echo PRODUCTION_DOMAIN=${{ secrets.PRODUCTION_DOMAIN }} >> .env
          cat .env
        working-directory: frontend/container

      - name: Build Frontend Container
        run: npm run build
        working-directory: frontend/container

      - name: Run CDK Unit Tests
        run: npm run test
        working-directory: infra
