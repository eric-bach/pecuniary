name: test

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - ready_for_review
      - synchronize

jobs:
  deploy-dev-arc:
    name: Deploy Dev
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
      id-token: write

    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.13.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_SERVICE_ROLE_DEV }}
          aws-region: us-east-1

      - name: 👀 Env
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Git ref:    ${{ github.ref }}"
          echo "GH actor:   ${{ github.actor }}"
          echo "SHA:        ${{ github.sha }}"
          VER=`node --version`; echo "Node ver:   $VER"
          VER=`npm --version`; echo "npm ver:    $VER"

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          install-command: yarn --frozen-lockfile --silent
          working-directory: client

      - name: 🏗 Build
        run: yarn build
        working-directory: client

      - name: 🛠 Install Arc
        run: yarn global add @architect/architect
        working-directory: client

      - name: 🚀 Deploy
        #if: github.ref == 'refs/heads/main'
        run: arc deploy --production --prune
        env:
          CI: true
        working-directory: client

  # unit-tests:
  #   name: Unit Tests
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3

  #     - name: Use Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18.x

  #     - name: Install Dependencies
  #       run: npm run cinstall-all
  #       working-directory: backend

  #     - name: Build Frontend
  #       run: npm run build-all-frontend
  #       working-directory: backend

  #     - name: Run CDK Unit Tests
  #       run: npm run test
  #       working-directory: backend

  # integration-tests:
  #   name: Integration Tests
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3

  #     - name: Use Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18.x

  #     - name: Install CDK Dependencies
  #       run: npm install
  #       working-directory: backend

  #     - name: Install Frontend Dependencies
  #       run: npm run cinstall-all-frontend
  #       working-directory: backend

  #     - name: Create frontend/container/.env file
  #       run: |
  #         touch .env
  #         echo PRODUCTION_DOMAIN=${{ secrets.CLOUDFRONT_DOMAIN_DEV }} >> .env
  #         echo REACT_APP_COGNITO_USERPOOL_ID=${{ secrets.COGNITO_USERPOOL_ID_DEV }} >> .env
  #         echo REACT_APP_COGNITO_CLIENT_ID=${{ secrets.COGNITO_WEB_CLIENT_ID_DEV }} >> .env
  #         echo REACT_APP_APPSYNC_ENDPOINT=${{ secrets.APPSYNC_ENDPOINT_DEV }} >> .env
  #         echo REACT_APP_APPSYNC_REGION=${{ secrets.CDK_DEFAULT_REGION }} >> .env
  #       working-directory: frontend/container

  #     - name: Start marketing MFE
  #       run: npm run start &
  #       working-directory: frontend/marketing

  #     - name: Start auth MFE
  #       run: npm run start &
  #       working-directory: frontend/auth

  #     - name: Start dashboard MFE
  #       run: npm run start &
  #       working-directory: frontend/dashboard

  #     - name: Start container MFE
  #       run: npm run start &
  #       working-directory: frontend/container

  #     - name: Run Cypress Frontend Tests
  #       run: npx cypress run --env username=${{ secrets.CYPRESS_USERNAME }},password=${{ secrets.CYPRESS_PASSWORD }}
  #       working-directory: frontend/container
