name: test

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - ready_for_review
      - synchronize

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install Dependencies
        run: npm run cinstall-all
        working-directory: backend

      - name: Build Frontend
        run: npm run build-all-frontend
        working-directory: backend

      - name: Run CDK Unit Tests
        run: npm run test
        working-directory: backend

  # frontend-integration-tests:

  mfe-integration-tests:
    name: MFE Integration Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install CDK Dependencies
        run: npm install
        working-directory: backend

      - name: Install Frontend Dependencies
        run: npm run cinstall-all-frontend
        working-directory: backend

      - name: Create frontend/container/.env file
        run: |
          touch .env
          echo PRODUCTION_DOMAIN=${{ secrets.CLOUDFRONT_DOMAIN_DEV }} >> .env
          echo REACT_APP_COGNITO_USERPOOL_ID=${{ secrets.COGNITO_USERPOOL_ID_DEV }} >> .env
          echo REACT_APP_COGNITO_CLIENT_ID=${{ secrets.COGNITO_WEB_CLIENT_ID_DEV }} >> .env
          echo REACT_APP_APPSYNC_ENDPOINT=${{ secrets.APPSYNC_ENDPOINT_DEV }} >> .env
          echo REACT_APP_APPSYNC_REGION=${{ secrets.CDK_DEFAULT_REGION }} >> .env
        working-directory: frontend/container

      - name: Start marketing MFE
        run: npm run start &
        working-directory: frontend/marketing

      - name: Start auth MFE
        run: npm run start &
        working-directory: frontend/auth

      - name: Start dashboard MFE
        run: npm run start &
        working-directory: frontend/dashboard

      - name: Start container MFE
        run: npm run start &
        working-directory: frontend/container

      - name: Run Cypress Frontend Tests
        run: npx cypress run --env username=${{ secrets.CYPRESS_USERNAME }},password=${{ secrets.CYPRESS_PASSWORD }}
        working-directory: frontend/container
